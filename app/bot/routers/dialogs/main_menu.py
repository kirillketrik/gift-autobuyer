from aiogram import types
from aiogram_dialog import Dialog, Window, DialogManager, ShowMode
from aiogram_dialog.widgets.kbd import Button, Group, Start, Row
from aiogram_dialog.widgets.text import Const

from app.bot.states import (
    EditGiftFilterSG,
    SetReceiversSG,
    DeleteFilterSG, MainMenuSG,
)
from app.core.interfaces.repository import GiftFilterRepository, ReceiverRepository
from app.utils.formatters import format_filter, paginate_text_blocks


async def on_show_filters(call: types.CallbackQuery, _, manager: DialogManager):
    gift_filter_repository: GiftFilterRepository = manager.middleware_data['gift_filter_repository']
    filters = await gift_filter_repository.get_all()

    if not filters:
        await call.message.answer("‚ö†Ô∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞.")
        return

    texts = [format_filter(f) for f in filters]
    blocks = paginate_text_blocks(texts)
    if len(blocks) == 1:
        text = f"üßæ <b>–í–∞—à–∏ —Ñ–∏–ª—å—Ç—Ä—ã:</b>\n\n" + blocks[0]
        await call.message.answer(text, parse_mode="HTML")
    else:
        for index, block in enumerate(blocks):
            text = f"üßæ <b>–í–∞—à–∏ —Ñ–∏–ª—å—Ç—Ä—ã ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {index + 1}/{len(blocks)}</b>\n\n" + block
            await call.message.answer(text, parse_mode="HTML")
    await manager.show(show_mode=ShowMode.SEND)


async def on_show_receivers(call: types.CallbackQuery, _, manager: DialogManager):
    receiver_repository: ReceiverRepository = manager.middleware_data['receiver_repository']

    receivers = await receiver_repository.get_all()
    if not receivers:
        await call.message.answer("üì≠ –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.")
        return

    lines = ["üéÅ <b>–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ –ø–æ–¥–∞—Ä–∫–æ–≤:</b>"]
    for receiver in receivers:
        lines.append(f"‚Ä¢ @{receiver.username}")
    await call.message.answer("\n".join(lines), parse_mode="HTML")
    await manager.show(show_mode=ShowMode.SEND)


main_menu_dialog = Dialog(
    Window(
        Const("üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:"),
        Group(
            Button(
                Const("‚ûñ‚ûñ [–§–∏–ª—å—Ç—Ä—ã] ‚ûñ‚ûñ"),
                id='none'
            ),
            Row(
                Start(Const("‚ûï –°–æ–∑–¥–∞—Ç—å"), id="create_filters", state=EditGiftFilterSG.select_mode),
                Button(Const("üëÅ –ü–æ–∫–∞–∑–∞—Ç—å"), id="show_filters", on_click=on_show_filters),
            ),
            Row(
                Start(Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"), id="delete", state=DeleteFilterSG.input_ids),
            ),
            Button(
                Const("‚ûñ‚ûñ [–ü–æ–ª—É—á–∞—Ç–µ–ª–∏] ‚ûñ‚ûñ"),
                id='none'
            ),
            Row(
                Start(Const("üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"), id="set_receivers", state=SetReceiversSG.input_usernames),
                Button(Const("üëÅ –ü–æ–∫–∞–∑–∞—Ç—å"), id="show_receivers", on_click=on_show_receivers),
            ),
        ),
        state=MainMenuSG.menu,
        parse_mode="HTML"
    )
)
