from app.core.models import GiftFilter


def format_filter(data: GiftFilter, index: int = 0) -> str:
    filter_id = data.id or index + 1

    lines = [f"<b>üî∏ –§–∏–ª—å—Ç—Ä #{filter_id}</b>"]

    fields = {}

    if data.min_price > 0 and data.max_price > 0:
        fields['–¶–µ–Ω–∞'] = f'{data.min_price}-{data.max_price}'
    elif data.min_price > 0:
        fields['–¶–µ–Ω–∞'] = f'–æ—Ç {data.min_price}'
    elif data.max_price > 0:
        fields['–¶–µ–Ω–∞'] = f'–¥–æ {data.max_price}'

    if data.min_supply > 0 and data.max_supply > 0:
        fields['–°–∞–ø–ª–∞–π'] = f'{data.min_supply}-{data.max_supply}'
    elif data.min_supply > 0:
        fields['–°–∞–ø–ª–∞–π'] = f'–æ—Ç {data.min_supply}'
    elif data.max_supply > 0:
        fields['–°–∞–ø–ª–∞–π'] = f'–¥–æ {data.max_supply}'

    fields['–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç'] = data.priority
    fields['–î–æ–ª—è –±—é–¥–∂–µ—Ç–∞'] = data.weight
    fields['–ú–∞–∫—Å. –∫–æ–ª-–≤–æ'] = data.max_buy_count
    fields['–ú–∞–∫—Å. –±—é–¥–∂–µ—Ç'] = data.max_spend_money
    fields['–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞'] = data.ordering

    for label, value in fields.items():
        if isinstance(value, int) and value < 1:
            continue
        lines.append(f"<b> - {label}:</b> <code>{value}</code>")

    return "\n".join(lines)


def paginate_text_blocks(texts: list[str], max_len: int = 3500) -> list[str]:
    pages = []
    current = ""

    for block in texts:
        if len(current) + len(block) + 2 > max_len:
            pages.append(current.strip())
            current = block + "\n\n"
        else:
            current += block + "\n\n"

    if current.strip():
        pages.append(current.strip())

    return pages
